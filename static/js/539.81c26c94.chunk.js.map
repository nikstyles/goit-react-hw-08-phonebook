{"version":3,"file":"static/js/539.81c26c94.chunk.js","mappings":"6KACA,MAA4B,8BAA5B,EAAoG,0BAApG,EAAsI,0B,SCGhIA,EAAY,SAAC,GAYZ,IAXLC,EAWI,EAXJA,GACAC,EAUI,EAVJA,MACAC,EASI,EATJA,MACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QAEAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAMA,OACE,iBAAKC,UAAWC,EAAhB,UACGV,IACC,kBAAOS,UAAWC,EAAcC,QAASZ,EAAzC,SACGC,KAGL,kBACES,UAAWC,EACXX,GAAIA,EACJE,MAAOA,EACPI,QAASA,EACTH,KAAMA,EACNU,SAAUT,EACVC,KAAMA,EACNE,YAAaA,EACbC,SAAUA,EACVC,QAASA,MAIhB,EAED,IAEAV,EAAUe,aAAe,CACvBT,KAAM,OACNG,UAAU,E,kECvBZ,IAvBgB,SAAC,GAAgC,IAA9BO,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC/B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUf,aAjBL,SAAC,GAAgB,IAAdgB,EAAa,EAAbA,OACdlB,EAAgBkB,EAAhBlB,MAAOC,EAASiB,EAATjB,KAIfgB,GAAS,SAAAE,GAAS,yBACbA,GADa,cAEflB,EAAOD,GAFQ,GAInB,EAQuCoB,aANnB,SAAAC,GACnBA,EAAEC,iBACFR,GAAS,UAAKE,IACdC,GAAS,UAAKJ,GACf,EAGF,C,mICtBD,GAAgB,WAAa,8BAA8B,WAAa,8BAA8B,UAAY,8B,SCO5GU,EAAY,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAMnB,GAA8CU,EAAAA,EAAAA,GAAQ,CACpDX,aANmB,CACnBY,MAAO,GACPC,SAAU,IAKVZ,SAAAA,IAFME,EAAR,EAAQA,MAAOd,EAAf,EAAeA,aAAckB,EAA7B,EAA6BA,aAKvBO,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEnCJ,EAAoBT,EAApBS,MAAOC,EAAaV,EAAbU,SACf,OACE,gCACG,KACD,gBAAKlB,UAAWuB,EAAAA,WAAhB,UACE,kBAAMvB,UAAWuB,EAAAA,KAAQjB,SAAUM,EAAcY,aAAa,MAA9D,WACE,iBAAKxB,UAAWuB,EAAAA,WAAhB,WACE,SAAClC,EAAA,EAAD,CACEC,GAAI6B,EACJ3B,MAAOyB,EACPvB,aAAcA,EACdH,MAAM,QACNE,KAAK,QACLE,KAAK,QACLE,YAAY,mBACZC,UAAQ,KAEV,SAACT,EAAA,EAAD,CACEC,GAAIgC,EACJ9B,MAAO0B,EACPxB,aAAcA,EACdH,MAAM,WACNE,KAAK,WACLE,KAAK,WACLE,YAAY,sBACZC,UAAQ,QAGZ,mBAAQE,UAAWuB,EAAAA,UAAnB,0BAKT,EAED,IAEAR,EAAUX,aAAe,CACvBE,SAAU,WAAQ,GC3DpB,MAA6B,8BCKd,SAASmB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAK3B,UAAWuB,EAAhB,UACE,SAAC,EAAD,CAAWjB,SANC,SAAAsB,GACdF,GAASG,EAAAA,EAAAA,IAAMD,GAChB,KAOF,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/TextField/text-field.module.css?a0d7","components/TextField/TextField.jsx","hooks/useForm.js","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__sWZNK\",\"field\":\"text-field_field__4qqhi\",\"input\":\"text-field_input__9Gcuq\",\"label\":\"text-field_label__aA6hD\"};","import PropTypes from 'prop-types';\n\nimport styles from './text-field.module.css';\n\nconst TextField = ({\n  id,\n  label,\n  value,\n  name,\n  handleChange,\n  type,\n  checked,\n  // className,\n  placeholder,\n  required,\n  pattern,\n}) => {\n  // const fullClassName = className\n  //   ? `${styles.field} ${className}`\n  //   : styles.field;\n\n  return (\n    <div className={styles.formGroup}>\n      {label && (\n        <label className={styles.label} htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <input\n        className={styles.input}\n        id={id}\n        value={value}\n        checked={checked}\n        name={name}\n        onChange={handleChange}\n        type={type}\n        placeholder={placeholder}\n        required={required}\n        pattern={pattern}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n  type: 'text',\n  required: false,\n};\n\nTextField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  pattern: PropTypes.string,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { value, name } = target;\n    // const { value, name, type, checked } = target;\n\n    // const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"login_form\":\"LoginForm_login_form__5NzpT\",\"input_list\":\"LoginForm_input_list__RZzXC\",\"login_btn\":\"LoginForm_login_btn__aGlXD\"};","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport useForm from '../../hooks/useForm';\nimport TextField from '../../components/TextField/TextField';\nimport s from './LoginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n\n  const { email, password } = state;\n  return (\n    <>\n      {' '}\n      <div className={s.login_form}>\n        <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\n          <div className={s.input_list}>\n            <TextField\n              id={emailId}\n              value={email}\n              handleChange={handleChange}\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter user email\"\n              required\n            />\n            <TextField\n              id={passwordId}\n              value={password}\n              handleChange={handleChange}\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter user password\"\n              required\n            />\n          </div>\n          <button className={s.login_btn}>Login</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n\nLoginForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login_form\":\"LoginPage_login_form__uF2X+\"};","// // redux\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport s from './LoginPage.module.css';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div className={s.login_form}>\n      <LoginForm onSubmit={onLogin} />\n    </div>\n  );\n}\n"],"names":["TextField","id","label","value","name","handleChange","type","checked","placeholder","required","pattern","className","styles","htmlFor","onChange","defaultProps","initialState","onSubmit","useState","state","setState","target","prevState","handleSubmit","e","preventDefault","LoginForm","useForm","email","password","emailId","useMemo","nanoid","passwordId","s","autoComplete","LoginPage","dispatch","useDispatch","data","login"],"sourceRoot":""}